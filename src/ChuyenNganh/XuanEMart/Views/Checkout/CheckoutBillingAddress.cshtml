@model XuanEmart.Models.BillingAddressModel

<div class="checkout-section mt-5 mb-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <h3 class="text-center mb-4">
                    <span class="orange-text">Thông tin</span> thanh toán
                </h3>
                <form asp-controller="Checkout" asp-action="SaveBillingAddress" method="post" class="needs-validation" novalidate>
                    <div class="form-group mb-3">
                        <label for="FullName" class="form-label">Họ và tên</label>
                        <input type="text" id="FullName" name="FullName" class="form-control" placeholder="Nhập họ và tên" required>
                        <div class="invalid-feedback">Vui lòng nhập họ và tên.</div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="PhoneNumber" class="form-label">Số điện thoại</label>
                        <input type="text" id="PhoneNumber" name="PhoneNumber" class="form-control" placeholder="Nhập số điện thoại" required>
                        <div class="invalid-feedback">Vui lòng nhập số điện thoại.</div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="SpecificAddress" class="form-label">Địa chỉ cụ thể</label>
                        <input type="text" id="SpecificAddress" name="SpecificAddress" class="form-control" placeholder="Nhập địa chỉ cụ thể" required>
                        <div class="invalid-feedback">Vui lòng nhập địa chỉ cụ thể.</div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="Province" class="form-label">Tỉnh/Thành phố</label>
                        <select id="Province" name="Province" class="form-control" required onchange="fetchDistricts(this.value)">
                            <option value="">Chọn Tỉnh/Thành phố</option>
                        </select>
                        <div class="invalid-feedback">Vui lòng chọn Tỉnh/Thành phố.</div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="District" class="form-label">Xã/Quận/Huyện</label>
                        <select id="District" name="District" class="form-control" required onchange="fetchWards(this.value)">
                            <option value="">Chọn Xã/Quận/Huyện</option>
                        </select>
                        <div class="invalid-feedback">Vui lòng chọn Xã/Quận/Huyện.</div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="Ward" class="form-label">Ấp/Phường</label>
                        <select id="Ward" name="Ward" class="form-control" required>
                            <option value="">Chọn Ấp/Phường</option>
                        </select>
                        <div class="invalid-feedback">Vui lòng chọn Ấp/Phường.</div>
                    </div>
                    <button type="submit" class="btn btn-primary btn-lg btn-block mt-4">Xác nhận thanh toán</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // Fetch Tỉnh/Thành phố
    async function fetchProvinces() {
        try {
            const response = await fetch("https://provinces.open-api.vn/api/p/");
            const provinces = await response.json();

            const provinceSelect = document.getElementById("Province");
            provinces.forEach(province => {
                const option = document.createElement("option");
                option.value = province.name;
                option.textContent = province.name;
                provinceSelect.appendChild(option);
            });
        } catch (error) {
            console.error("Error fetching provinces:", error);
        }
    }

    // Fetch Quận/Huyện
    async function fetchDistricts(provinceName) {
        if (!provinceName) return;

        try {
            const resProvince = await fetch(`https://provinces.open-api.vn/api/p/`);
            const provinces = await resProvince.json();
            const province = provinces.find(p => p.name === provinceName);
            if (!province) return;

            const response = await fetch(`https://provinces.open-api.vn/api/p/${province.code}?depth=2`);
            const data = await response.json();
            const districts = data.districts;

            const districtSelect = document.getElementById("District");
            const wardSelect = document.getElementById("Ward");
            districtSelect.innerHTML = '<option value="">Chọn Xã/Quận/Huyện</option>';
            wardSelect.innerHTML = '<option value="">Chọn Ấp/Phường</option>';

            districts.forEach(district => {
                const option = document.createElement("option");
                option.value = district.name;
                option.textContent = district.name;
                districtSelect.appendChild(option);
            });
        } catch (error) {
            console.error("Error fetching districts:", error);
        }
    }

    // Fetch Ấp/Phường
    async function fetchWards(districtName) {
        if (!districtName) return;

        try {
            const resDistricts = await fetch("https://provinces.open-api.vn/api/d/");
            const districts = await resDistricts.json();
            const district = districts.find(d => d.name === districtName);
            if (!district) return;

            const response = await fetch(`https://provinces.open-api.vn/api/d/${district.code}?depth=2`);
            const data = await response.json();
            const wards = data.wards;

            const wardSelect = document.getElementById("Ward");
            wardSelect.innerHTML = '<option value="">Chọn Ấp/Phường</option>';

            wards.forEach(ward => {
                const option = document.createElement("option");
                option.value = ward.name;
                option.textContent = ward.name;
                wardSelect.appendChild(option);
            });
        } catch (error) {
            console.error("Error fetching wards:", error);
        }
    }

    document.addEventListener("DOMContentLoaded", fetchProvinces);
</script>
